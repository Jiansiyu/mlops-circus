version: '3.7'
services:
    minio:
        image: minio/minio:latest
        restart: always
        container_name: mlflow_s3
        ports:
            - "9000:9000"
            - "9001:9001"
        command: server /data --console-address ':9001' --address ':9000'
        environment:
            - MINIO_ROOT_USER=${AWS_ACCESS_KEY_ID}
            - MINIO_ROOT_PASSWORD=${AWS_SECRET_ACCESS_KEY}
        volumes:
            - minio_data:/data
        networks:
            - internal
            - public

    mc:
        image: minio/mc:latest
        depends_on:
            - minio
        container_name: mc
        env_file:
            - .env
        entrypoint: >
            /bin/sh -c "
            /tmp/wait-for-it.sh minio:9000 &&
            /usr/bin/mc alias set minio http://minio:9000 ${AWS_ACCESS_KEY_ID} ${AWS_SECRET_ACCESS_KEY} &&
            /usr/bin/mc mb minio/mlflow;
            exit 0;
            "
        volumes:
            - ./wait-for-it.sh:/tmp/wait-for-it.sh

        networks:
            - internal
            - public

    postgres:
        image: postgres
        volumes:
            - postgres_db_data:/var/lib/postgresql/data
        environment:
            - POSTGRES_DB=${POSTGRES_DB}
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        ports:
            - "15432:5432"
        networks:
            - internal
            - public

    pgadmin:
        image: dpage/pgadmin4
        restart: always
        environment:
            PGADMIN_DEFAULT_EMAIL: pgadmin@pgadmin.com #the username to login to pgadmin
            PGADMIN_DEFAULT_PASSWORD: pgadmin # the password to login to pgadmin
        ports:
            - "5050:80"
        volumes:
            - ./servers.json:/pgadmin4/servers.json # preconfigured servers/connections
        depends_on:
            - postgres
        networks:
            - public
            - internal

    mlflowui:
        restart: always
        build: ./mlflow
        image: mlflow_server
        container_name: mlflow_server
        depends_on:
            - mc
            - postgres
        ports:
            - "5000:5000"
        environment:
            - MLFLOW_S3_ENDPOINT_URL=http://minio:9000
            - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
            - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
        command: mlflow server --backend-store-uri postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432 --default-artifact-root s3://mlflow/ --host 0.0.0.0
        networks:
            - internal
            - public

networks:
    internal:
    public:
        driver: bridge

volumes:
    minio_data:
    postgres_db_data:
